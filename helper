#helper
في Laravel، عند تعريف مهمة مجدولة مثل:


```php
Schedule::command('stocktake:dispatch-scheduled')->daily();
```

فهذا يعني أن Laravel يتوقع أن يتم تشغيل الـ **scheduler** نفسه بانتظام، وعادةً يتم ذلك عن طريق إعداد **cron job** في نظام التشغيل. ولكن على ويندوز (وخاصة أثناء التطوير)، يمكنك تشغيل الـ scheduler يدويًا لتجربته.

### ✅ لتشغيل المهمة المجدولة يدويًا:

افتح الطرفية (Command Prompt أو PowerShell أو Terminal في VS Code)، ثم شغّل الأمر التالي:

```bash
php artisan schedule:run
```

هذا الأمر يقوم بتنفيذ جميع المهام المجدولة التي **موعد تنفيذها قد حان**، مثل المهام التي تم جدولتها لتعمل `->daily()` إذا كنت تشغل الأمر في منتصف الليل.

---

### ⚠️ ملاحظة مهمة:

* `php artisan schedule:run` لا يعمل بشكل دائم بل يجب استدعاؤه بشكل منتظم (كل دقيقة غالبًا).
* في بيئة الإنتاج (Linux)، عادةً يتم إضافة هذا إلى cron:

```bash
* * * * * cd /path-to-your-project && php artisan schedule:run >> /dev/null 2>&1
```

---

### 🧪 اختبار مهمة مجدولة يدويًا

لتجربة الأمر بشكل مباشر بدون الاعتماد على الوقت، يمكنك تشغيل الأمر المجدول مباشرة لتتأكد أنه يعمل:

```bash
php artisan stocktake:dispatch-scheduled
```

إذا اشتغل الأمر بنجاح، فهذا يعني أن المهمة التي قمت بجدولتها تعمل بشكل صحيح.

---

### 💡 للتطوير والاختبار:

يمكنك تغيير توقيت المهمة مؤقتًا لتكون `everyMinute()` بدلاً من `daily()` لتسهل عليك التجربة:

```php
Schedule::command('stocktake:dispatch-scheduled')->everyMinute();
```

ثم يمكنك تشغيل:

```bash
php artisan schedule:run
```

وسيتم تنفيذ الأمر.

هل تحب أن أساعدك في كتابة كود الأمر `stocktake:dispatch-scheduled` نفسه أو التأكد من أنه مسجّل بشكل صحيح؟

//

php artisan stock:check-low


//====
UPDATE purchase_receipt_items SET available_quantity = 0 WHERE item_id = 1
//===========
php artisan schedule:list
لاعرف ال commands يلي عتدي

//================
تعليمة تشغيل ال queue
php artisan queue:work

////------------
لل view
php artisan view:clear

/// الصلاحية
1 مواد حتخلص
عرض ع التصمصم
جسون
---------------------
2 المواد يلي خلصت

عرض عالتصمصم
جسون
تقرير pdf
-------------------------------------------
.env تحديث

php artisan config:clear
php artisan config:cache
